version: '3.8'

services:
  # DomMate Application
  dommate:
    build:
      context: .
      dockerfile: Dockerfile
    image: dommate:latest
    container_name: dommate-app
    restart: unless-stopped
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=3001
      - DATABASE_PATH=/app/data/domains.db
      - LOG_FILE=/app/logs/dommate.log
      - BACKUP_DIR=/app/backups
      - EXPORT_TEMP_DIR=/app/temp/exports
    
    # Port mapping
    ports:
      - "3001:3001"
    
    # Volume mounts for persistent data
    volumes:
      - dommate-data:/app/data
      - dommate-logs:/app/logs
      - dommate-backups:/app/backups
      - dommate-temp:/app/temp
      # Mount environment file if exists
      - ./env.production:/app/.env
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3001, path: '/health', timeout: 2000 }; const request = http.request(options, (res) => { if (res.statusCode == 200) process.exit(0); else process.exit(1); }); request.on('error', () => process.exit(1)); request.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Networks
    networks:
      - dommate-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: dommate-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    
    depends_on:
      - dommate
    
    networks:
      - dommate-network
    
    # Only start if nginx config exists
    profiles:
      - nginx

  # Database Backup Service (Optional)
  backup:
    image: dommate:latest
    container_name: dommate-backup
    restart: "no"
    
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/domains.db
      - BACKUP_DIR=/app/backups
    
    volumes:
      - dommate-data:/app/data:ro
      - dommate-backups:/app/backups
      - ./env.production:/app/.env:ro
    
    # Run backup script
    command: ["sh", "-c", "node -e \"const db = require('./server/database'); db.backupDatabase().then(() => console.log('Backup completed')).catch(console.error);\""]
    
    networks:
      - dommate-network
    
    profiles:
      - backup

# Named volumes for persistent data
volumes:
  dommate-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-data/data
  
  dommate-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-data/logs
  
  dommate-backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-data/backups
  
  dommate-temp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-data/temp
  
  nginx-cache:
    driver: local

# Custom network
networks:
  dommate-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 